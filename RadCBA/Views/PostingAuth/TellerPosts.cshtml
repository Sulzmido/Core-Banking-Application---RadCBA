@using RadCBA.Core.Models;
@model IEnumerable<RadCBA.Core.Models.TellerPosting>

@{
    ViewBag.Title = "TellerPosts";
    ApplicationDbContext db = new ApplicationDbContext();
}

<h2>Unapproved Teller Posts</h2>
<hr />
@*@if (ViewBag.Msg != null)
{
    <div class="alert alert-primary" role="alert">
        @ViewBag.Msg
    </div>
}*@

<p id="toastAlert" hidden="hidden">@ViewBag.Msg</p>

<table class="table table-bordered table-striped" id="dataTable">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CustomerAccount.AccountName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Narration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PostingType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PostInitiatorId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th></th>
        </tr>
    </thead>

    <tbody>
        @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.CustomerAccount.AccountName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Narration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Date)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PostingType)
            </td>
            <td>
                @*@Html.DisplayFor(modelItem => item.PostInitiatorId)*@
                @{
                    var name = db.Users.Find(item.PostInitiatorId).UserName;
                }
                @name
            </td>
            @if (item.Status == PostStatus.Declined)
            {
                <td class="text-danger">
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
            }
            @if (item.Status == PostStatus.Pending)
            {
                <td class="text-warning">
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
            }
            <td>
                @Html.ActionLink("Approve", "ApproveTellerPost", new { id = item.ID }) |
                @if (item.Status != RadCBA.Core.Models.PostStatus.Declined)
                {
                    @Html.ActionLink("Decline", "DeclineTellerPost", new { id = item.ID })
                    <label> | </label>
                }
                @Html.ActionLink("Details", "TellerDetails", new { id = item.ID }) |
                @Html.ActionLink("Delete", "TellerDelete", new { id = item.ID })
            </td>
        </tr>
                    }
</tbody>

</table>


@*<button id="ts-success"> SUCCESS </button>*@
@*<script>
    $(document).ready(function () {
        
        var message = document.getElementById('toastAlert').innerHTML;

        if (message != '') {
            toastr.warning(message, 'Error');
        }

        // Success Type
        $('#ts-success').on('click', function () {
            toastr.success('Have fun storming the castle!', 'Miracle Max Says');
        });

        //toastr.info('We do have the Kapua suite available.', 'Turtle Bay Resort');
        //toastr.warning('My name is Inigo Montoya. You killed my father, prepare to die!');
        //toastr.error('I do not think that word means what you think it means.', 'Inconceivable!');
    })
</script>*@